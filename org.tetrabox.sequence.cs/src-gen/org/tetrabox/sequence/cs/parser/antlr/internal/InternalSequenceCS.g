/*
 * generated by Xtext 2.12.0
 */
grammar InternalSequenceCS;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.tetrabox.sequence.cs.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.tetrabox.sequence.cs.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.tetrabox.sequence.cs.services.SequenceCSGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private SequenceCSGrammarAccess grammarAccess;

    public InternalSequenceCSParser(TokenStream input, SequenceCSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SERE";
   	}

   	@Override
   	protected SequenceCSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSERE
entryRuleSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSERERule()); }
	iv_ruleSERE=ruleSERE
	{ $current=$iv_ruleSERE.current; }
	EOF;

// Rule SERE
ruleSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSEREAccess().getSimpleSEREParserRuleCall_0());
		}
		this_SimpleSERE_0=ruleSimpleSERE
		{
			$current = $this_SimpleSERE_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1=':'
				{
					newLeafNode(otherlv_1, grammarAccess.getSEREAccess().getColonKeyword_1_0_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getSEREAccess().getFusionSERELeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSEREAccess().getRightSEREParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSERERule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.tetrabox.sequence.cs.SequenceCS.SERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getSEREAccess().getSemicolonKeyword_1_1_0());
				}
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getSEREAccess().getConcatenationSERELeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSEREAccess().getRightSEREParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSERERule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.tetrabox.sequence.cs.SequenceCS.SERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleSimpleSERE
entryRuleSimpleSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSERERule()); }
	iv_ruleSimpleSERE=ruleSimpleSERE
	{ $current=$iv_ruleSimpleSERE.current; }
	EOF;

// Rule SimpleSERE
ruleSimpleSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimpleSEREAccess().getSequenceTerminalParserRuleCall_0());
		}
		this_SequenceTerminal_0=ruleSequenceTerminal
		{
			$current = $this_SequenceTerminal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimpleSEREAccess().getSequenceParserRuleCall_1());
		}
		this_Sequence_1=ruleSequence
		{
			$current = $this_Sequence_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimpleSEREAccess().getCompoundSEREParserRuleCall_2());
		}
		this_CompoundSERE_2=ruleCompoundSERE
		{
			$current = $this_CompoundSERE_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequenceTerminal
entryRuleSequenceTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceTerminalRule()); }
	iv_ruleSequenceTerminal=ruleSequenceTerminal
	{ $current=$iv_ruleSequenceTerminal.current; }
	EOF;

// Rule SequenceTerminal
ruleSequenceTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSequenceTerminalAccess().getNotSequenceTerminalAction_0_0(),
						$current);
				}
			)
			otherlv_1='not'
			{
				newLeafNode(otherlv_1, grammarAccess.getSequenceTerminalAccess().getNotKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceTerminalAccess().getLiteralSequenceTerminalParserRuleCall_0_2_0());
					}
					lv_literal_2_0=ruleSequenceTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceTerminalRule());
						}
						set(
							$current,
							"literal",
							lv_literal_2_0,
							"org.tetrabox.sequence.cs.SequenceCS.SequenceTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSequenceTerminalAccess().getBooleanLiteralAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_literal_4_0='true'
						{
							newLeafNode(lv_literal_4_0, grammarAccess.getSequenceTerminalAccess().getLiteralTrueKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSequenceTerminalRule());
							}
							setWithLastConsumed($current, "literal", true, "true");
						}
					)
				)
				    |
				otherlv_5='false'
				{
					newLeafNode(otherlv_5, grammarAccess.getSequenceTerminalAccess().getFalseKeyword_1_1_1());
				}
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSequenceTerminalAccess().getOCLExpressionAction_2_0(),
						$current);
				}
			)
			otherlv_7='ocl'
			{
				newLeafNode(otherlv_7, grammarAccess.getSequenceTerminalAccess().getOclKeyword_2_1());
			}
			(
				(
					lv_expression_8_0=RULE_STRING
					{
						newLeafNode(lv_expression_8_0, grammarAccess.getSequenceTerminalAccess().getExpressionSTRINGTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSequenceTerminalRule());
						}
						setWithLastConsumed(
							$current,
							"expression",
							lv_expression_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSequence
entryRuleSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceRule()); }
	iv_ruleSequence=ruleSequence
	{ $current=$iv_ruleSequence.current; }
	EOF;

// Rule Sequence
ruleSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSequenceAccess().getBracedSEREParserRuleCall_0());
		}
		this_BracedSERE_0=ruleBracedSERE
		{
			$current = $this_BracedSERE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSequenceAccess().getRepeatedSEREParserRuleCall_1());
		}
		this_RepeatedSERE_1=ruleRepeatedSERE
		{
			$current = $this_RepeatedSERE_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRepeatedSERE
entryRuleRepeatedSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepeatedSERERule()); }
	iv_ruleRepeatedSERE=ruleRepeatedSERE
	{ $current=$iv_ruleRepeatedSERE.current; }
	EOF;

// Rule RepeatedSERE
ruleRepeatedSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanCountedConsecutiveRepetitionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionSequenceTerminalParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleSequenceTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.tetrabox.sequence.cs.SequenceCS.SequenceTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('[')=>
					otherlv_2='['
					{
						newLeafNode(otherlv_2, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_0_2_0());
					}
				)
				otherlv_3='*'
				{
					newLeafNode(otherlv_3, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_0_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_0_3_0());
					}
					lv_count_4_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_4_0,
							"org.tetrabox.sequence.cs.SequenceCS.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_0_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceCountedConsecutiveRepetitionAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBracedSEREParserRuleCall_1_1_0());
					}
					lv_expression_7_0=ruleBracedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_7_0,
							"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('[')=>
					otherlv_8='['
					{
						newLeafNode(otherlv_8, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_1_2_0());
					}
				)
				otherlv_9='*'
				{
					newLeafNode(otherlv_9, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_1_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_1_3_0());
					}
					lv_count_10_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_10_0,
							"org.tetrabox.sequence.cs.SequenceCS.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_11=']'
			{
				newLeafNode(otherlv_11, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_1_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceCountedConsecutiveRepetitionAction_2_0(),
						$current);
				}
			)
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getRepeatedSEREAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionRepeatedSEREParserRuleCall_2_2_0());
					}
					lv_expression_14_0=ruleRepeatedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_14_0,
							"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getRepeatedSEREAccess().getRightParenthesisKeyword_2_3());
			}
			(
				(
					('[')=>
					otherlv_16='['
					{
						newLeafNode(otherlv_16, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_2_4_0());
					}
				)
				otherlv_17='*'
				{
					newLeafNode(otherlv_17, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_2_4_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_2_5_0());
					}
					lv_count_18_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_18_0,
							"org.tetrabox.sequence.cs.SequenceCS.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_19=']'
			{
				newLeafNode(otherlv_19, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_2_6());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanConsecutiveRepetitionAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionSequenceTerminalParserRuleCall_3_1_0());
					}
					lv_expression_21_0=ruleSequenceTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_21_0,
							"org.tetrabox.sequence.cs.SequenceCS.SequenceTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('[')=>
					otherlv_22='['
					{
						newLeafNode(otherlv_22, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_3_2_0());
					}
				)
				otherlv_23='+'
				{
					newLeafNode(otherlv_23, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_3_2_1());
				}
			)
			otherlv_24=']'
			{
				newLeafNode(otherlv_24, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_3_3());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceConsecutiveRepetitionAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionBracedSEREParserRuleCall_4_1_0());
					}
					lv_expression_26_0=ruleBracedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_26_0,
							"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('[')=>
					otherlv_27='['
					{
						newLeafNode(otherlv_27, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_4_2_0());
					}
				)
				otherlv_28='+'
				{
					newLeafNode(otherlv_28, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_4_2_1());
				}
			)
			otherlv_29=']'
			{
				newLeafNode(otherlv_29, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_4_3());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getSequenceConsecutiveRepetitionAction_5_0(),
						$current);
				}
			)
			otherlv_31='('
			{
				newLeafNode(otherlv_31, grammarAccess.getRepeatedSEREAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionRepeatedSEREParserRuleCall_5_2_0());
					}
					lv_expression_32_0=ruleRepeatedSERE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_32_0,
							"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_33=')'
			{
				newLeafNode(otherlv_33, grammarAccess.getRepeatedSEREAccess().getRightParenthesisKeyword_5_3());
			}
			(
				(
					('[')=>
					otherlv_34='['
					{
						newLeafNode(otherlv_34, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_5_4_0());
					}
				)
				otherlv_35='+'
				{
					newLeafNode(otherlv_35, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_5_4_1());
				}
			)
			otherlv_36=']'
			{
				newLeafNode(otherlv_36, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_5_5());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanCountedNonConsecutiveRepetitionAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionSequenceTerminalParserRuleCall_6_1_0());
					}
					lv_expression_38_0=ruleSequenceTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_38_0,
							"org.tetrabox.sequence.cs.SequenceCS.SequenceTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('[')=>
					otherlv_39='['
					{
						newLeafNode(otherlv_39, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_6_2_0());
					}
				)
				otherlv_40='='
				{
					newLeafNode(otherlv_40, grammarAccess.getRepeatedSEREAccess().getEqualsSignKeyword_6_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_6_3_0());
					}
					lv_count_41_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_41_0,
							"org.tetrabox.sequence.cs.SequenceCS.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_42=']'
			{
				newLeafNode(otherlv_42, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_6_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getBooleanCountedGotoRepetitionAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getExpressionSequenceTerminalParserRuleCall_7_1_0());
					}
					lv_expression_44_0=ruleSequenceTerminal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"expression",
							lv_expression_44_0,
							"org.tetrabox.sequence.cs.SequenceCS.SequenceTerminal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('[')=>
					otherlv_45='['
					{
						newLeafNode(otherlv_45, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_7_2_0());
					}
				)
				otherlv_46='->'
				{
					newLeafNode(otherlv_46, grammarAccess.getRepeatedSEREAccess().getHyphenMinusGreaterThanSignKeyword_7_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_7_3_0());
					}
					lv_count_47_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_47_0,
							"org.tetrabox.sequence.cs.SequenceCS.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_48=']'
			{
				newLeafNode(otherlv_48, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_7_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getWildCardAction_8_0(),
						$current);
				}
			)
			otherlv_50='['
			{
				newLeafNode(otherlv_50, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_8_1());
			}
			otherlv_51='*'
			{
				newLeafNode(otherlv_51, grammarAccess.getRepeatedSEREAccess().getAsteriskKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRepeatedSEREAccess().getCountCountParserRuleCall_8_3_0());
					}
					lv_count_52_0=ruleCount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRepeatedSERERule());
						}
						set(
							$current,
							"count",
							lv_count_52_0,
							"org.tetrabox.sequence.cs.SequenceCS.Count");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_53=']'
			{
				newLeafNode(otherlv_53, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_8_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRepeatedSEREAccess().getLengthOneAction_9_0(),
						$current);
				}
			)
			otherlv_55='['
			{
				newLeafNode(otherlv_55, grammarAccess.getRepeatedSEREAccess().getLeftSquareBracketKeyword_9_1());
			}
			otherlv_56='+'
			{
				newLeafNode(otherlv_56, grammarAccess.getRepeatedSEREAccess().getPlusSignKeyword_9_2());
			}
			otherlv_57=']'
			{
				newLeafNode(otherlv_57, grammarAccess.getRepeatedSEREAccess().getRightSquareBracketKeyword_9_3());
			}
		)
	)
;

// Entry rule entryRuleBracedSERE
entryRuleBracedSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracedSERERule()); }
	iv_ruleBracedSERE=ruleBracedSERE
	{ $current=$iv_ruleBracedSERE.current; }
	EOF;

// Rule BracedSERE
ruleBracedSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBracedSEREAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBracedSEREAccess().getExpressionSEREParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleSERE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracedSERERule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.tetrabox.sequence.cs.SequenceCS.SERE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBracedSEREAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleCompoundSERE
entryRuleCompoundSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompoundSERERule()); }
	iv_ruleCompoundSERE=ruleCompoundSERE
	{ $current=$iv_ruleCompoundSERE.current; }
	EOF;

// Rule CompoundSERE
ruleCompoundSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompoundSEREAccess().getRepeatedSEREParserRuleCall_0());
		}
		this_RepeatedSERE_0=ruleRepeatedSERE
		{
			$current = $this_RepeatedSERE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompoundSEREAccess().getBracedSEREParserRuleCall_1());
		}
		this_BracedSERE_1=ruleBracedSERE
		{
			$current = $this_BracedSERE_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompoundSEREAccess().getBinaryCompoundSEREParserRuleCall_2());
		}
		this_BinaryCompoundSERE_2=ruleBinaryCompoundSERE
		{
			$current = $this_BinaryCompoundSERE_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBinaryCompoundSERE
entryRuleBinaryCompoundSERE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryCompoundSERERule()); }
	iv_ruleBinaryCompoundSERE=ruleBinaryCompoundSERE
	{ $current=$iv_ruleBinaryCompoundSERE.current; }
	EOF;

// Rule BinaryCompoundSERE
ruleBinaryCompoundSERE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREOrAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_0_1_0_0());
						}
						lv_left_1_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_1_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_0_1_1_0());
						}
						lv_left_2_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_2_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_3='('
					{
						newLeafNode(otherlv_3, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_0_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_0_1_2_1_0());
							}
							lv_left_4_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_4_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=')'
					{
						newLeafNode(otherlv_5, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_0_1_2_2());
					}
				)
			)
			(
				('|')=>
				otherlv_6='|'
				{
					newLeafNode(otherlv_6, grammarAccess.getBinaryCompoundSEREAccess().getVerticalLineKeyword_0_2());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_0_3_0_0());
						}
						lv_right_7_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_7_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_0_3_1_0());
						}
						lv_right_8_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_8_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_9='('
					{
						newLeafNode(otherlv_9, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_0_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_0_3_2_1_0());
							}
							lv_right_10_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_10_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_11=')'
					{
						newLeafNode(otherlv_11, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_0_3_2_2());
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREAndNLMAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_1_1_0_0());
						}
						lv_left_13_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_13_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_1_1_1_0());
						}
						lv_left_14_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_14_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_15='('
					{
						newLeafNode(otherlv_15, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_1_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_1_1_2_1_0());
							}
							lv_left_16_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_16_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_17=')'
					{
						newLeafNode(otherlv_17, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_1_1_2_2());
					}
				)
			)
			(
				('&')=>
				otherlv_18='&'
				{
					newLeafNode(otherlv_18, grammarAccess.getBinaryCompoundSEREAccess().getAmpersandKeyword_1_2());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_1_3_0_0());
						}
						lv_right_19_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_19_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_1_3_1_0());
						}
						lv_right_20_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_20_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_21='('
					{
						newLeafNode(otherlv_21, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_1_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_1_3_2_1_0());
							}
							lv_right_22_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_22_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_23=')'
					{
						newLeafNode(otherlv_23, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_1_3_2_2());
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREAndLMAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_2_1_0_0());
						}
						lv_left_25_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_25_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_2_1_1_0());
						}
						lv_left_26_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_26_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_27='('
					{
						newLeafNode(otherlv_27, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_2_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_2_1_2_1_0());
							}
							lv_left_28_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_28_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_29=')'
					{
						newLeafNode(otherlv_29, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_2_1_2_2());
					}
				)
			)
			(
				('&&')=>
				otherlv_30='&&'
				{
					newLeafNode(otherlv_30, grammarAccess.getBinaryCompoundSEREAccess().getAmpersandAmpersandKeyword_2_2());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_2_3_0_0());
						}
						lv_right_31_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_31_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_2_3_1_0());
						}
						lv_right_32_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_32_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_33='('
					{
						newLeafNode(otherlv_33, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_2_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_2_3_2_1_0());
							}
							lv_right_34_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_34_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_35=')'
					{
						newLeafNode(otherlv_35, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_2_3_2_2());
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryCompoundSEREAccess().getSEREWithinAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftRepeatedSEREParserRuleCall_3_1_0_0());
						}
						lv_left_37_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_37_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBracedSEREParserRuleCall_3_1_1_0());
						}
						lv_left_38_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"left",
								lv_left_38_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_39='('
					{
						newLeafNode(otherlv_39, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_3_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getLeftBinaryCompoundSEREParserRuleCall_3_1_2_1_0());
							}
							lv_left_40_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"left",
									lv_left_40_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_41=')'
					{
						newLeafNode(otherlv_41, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_3_1_2_2());
					}
				)
			)
			(
				('within')=>
				otherlv_42='within'
				{
					newLeafNode(otherlv_42, grammarAccess.getBinaryCompoundSEREAccess().getWithinKeyword_3_2());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightRepeatedSEREParserRuleCall_3_3_0_0());
						}
						lv_right_43_0=ruleRepeatedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_43_0,
								"org.tetrabox.sequence.cs.SequenceCS.RepeatedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBracedSEREParserRuleCall_3_3_1_0());
						}
						lv_right_44_0=ruleBracedSERE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
							}
							set(
								$current,
								"right",
								lv_right_44_0,
								"org.tetrabox.sequence.cs.SequenceCS.BracedSERE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_45='('
					{
						newLeafNode(otherlv_45, grammarAccess.getBinaryCompoundSEREAccess().getLeftParenthesisKeyword_3_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryCompoundSEREAccess().getRightBinaryCompoundSEREParserRuleCall_3_3_2_1_0());
							}
							lv_right_46_0=ruleBinaryCompoundSERE
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryCompoundSERERule());
								}
								set(
									$current,
									"right",
									lv_right_46_0,
									"org.tetrabox.sequence.cs.SequenceCS.BinaryCompoundSERE");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_47=')'
					{
						newLeafNode(otherlv_47, grammarAccess.getBinaryCompoundSEREAccess().getRightParenthesisKeyword_3_3_2_2());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCount
entryRuleCount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountRule()); }
	iv_ruleCount=ruleCount
	{ $current=$iv_ruleCount.current; }
	EOF;

// Rule Count
ruleCount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCountAccess().getCOUNTNUMBERParserRuleCall_0_0());
				}
				lv_COUNT_0_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountRule());
					}
					set(
						$current,
						"COUNT",
						lv_COUNT_0_0,
						"org.tetrabox.sequence.cs.SequenceCS.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCountAccess().getRangeParserRuleCall_1());
		}
		this_Range_1=ruleRange
		{
			$current = $this_Range_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getLOWER_BOUNDNUMBERParserRuleCall_0_0());
				}
				lv_LOWER_BOUND_0_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"LOWER_BOUND",
						lv_LOWER_BOUND_0_0,
						"org.tetrabox.sequence.cs.SequenceCS.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getHIGHER_BOUNDNUMBERParserRuleCall_2_0());
				}
				lv_HIGHER_BOUND_2_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"HIGHER_BOUND",
						lv_HIGHER_BOUND_2_0,
						"org.tetrabox.sequence.cs.SequenceCS.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
